#include<stdio.h>
#include<stdlib.h>

typedef struct node_tag {
	int data ;
	struct node_tag * next ;
}node;

typedef struct set_wrap {
	node * start ;
}set;

//1.
/*
int is_element_of(int x,set * s)
{
	node * nptr = s->start ;
	while(nptr != NULL)
	{
		if(nptr->data == x)
		return 1 ;
		nptr = nptr->next ;
	}
	
	return 0 ;
}

int is_empty(set * s)
{
	
	//Returns 1 if empty else 0
	
	if(s->start == NULL)
	return 1 ;

	return 0 ;
}

int size(set * s)
{
	int count = 0 ;
	while(s->start != NULL)
	{
		count++ ;	
	}
	
	return count ;
}
*/
node * DeleteFromStart(node * list_ptr)
{
	node * nptr ;
	
	nptr = list_ptr ;
	list_ptr = list_ptr->next ;
	
	free(nptr) ;
	
	return list_ptr ;
}

node * DeleteFromEnd(node * list_ptr)
{
	//node * nptr = (node *)malloc(sizeof(node)) ;
	node *ptr1 , *ptr2 ;
	
	ptr1 = list_ptr ;
	ptr2 = list_ptr ;
	
	if(ptr1->next == NULL)
	{
		list_ptr = NULL ;
		free(ptr1) ;
	}
	else
	{
		while(ptr1->next != NULL)
		{
			ptr1 = ptr1->next ;
			 if(ptr1->next != NULL)
			 {
	 			ptr2 = ptr2->next ;
			 }	
		}
		
		ptr2->next = NULL ;
		free(ptr1) ;
	}
	

	return list_ptr ;	
}

